// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t]==1) out[t+1] = 0
 * else if (load[t]==1)  out[t+1] = in[t]
 * else if (inc[t]==1)   out[t+1] = out[t] + 1  (integer addition)
 * else                  out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    
	Or(a = load, b = inc, out = loadOrInc);
	Or(a = loadOrInc, b = reset, out = regLoad);
	
	//sel = 00: regOut
	//sel = 01: 0 
	//sel = 10: in
	//sel = 11: regIncremented
	
	//s0: reset | load
	Or(a = reset, b = load, out = s0);
	
	//s1: nReset && (load || inc)
	Not(in=reset, out = nReset);
	And(a = nReset, b = loadOrInc, out = s1);
	
	Mux4Way16(a = regOut, b = false,  c = regIncremented, d = in, sel[0] = s0, sel[1] = s1, out = regIn);
	
	Add16(a= regOut, b[0] = true, out = regIncremented);
    
	Register(in = regIn, load = regLoad, out = out, out = regOut);
		
}